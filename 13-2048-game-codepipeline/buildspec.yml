version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      - REPOSITORY_URI=$ECR_REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  
  build:
    commands:
      - echo Build started on `date`
      - echo "Current directory before navigation:"
      - pwd
      - ls -la
      
      # Navigate to project directory
      - cd 13-2048-game-codepipeline
      - echo "Current directory after navigation:"
      - pwd
      - ls -la
      
      # Build container image
      - echo Building container image...
      - docker build -f docker/Dockerfile -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      
      # Build frontend
      - echo Building frontend...
      - cd frontend
      - npm install
      - echo "VITE_API_URL=http://project-13-2048-game-codepp-alb-150668108.ap-south-1.elb.amazonaws.com" > .env
      - cat .env
      - npm run build || echo "Frontend build failed, continuing..."
      - echo "Checking if dist directory exists..."
      - ls -la
      - if [ -d "dist" ]; then echo "dist directory found"; ls -la dist/; else echo "dist directory not found"; fi
      - cd ..
  
  post_build:
    commands:
      - echo Build completed on `date`
      
      # Push image to ECR
      - echo Pushing image to ECR...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      
      # Update ECS service
      - echo Updating ECS service...
      - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment
      
      # Deploy frontend to S3
      - echo Deploying frontend to S3...
      - echo "Current directory:"
      - pwd
      - echo "Listing project structure:"
      - ls -la
      - echo "Checking frontend directory:"
      - ls -la frontend/
      - if [ -d "frontend/dist" ]; then
          echo "Frontend dist directory found, syncing to S3...";
          echo "Contents of dist directory:";
          ls -la frontend/dist/;
          aws s3 sync frontend/dist/ s3://$S3_BUCKET --delete;
          echo "S3 sync completed";
        else
          echo "Frontend dist directory not found, creating fallback...";
          mkdir -p temp-frontend;
          echo '<html><body><h1>2048 Game API is running</h1><p>Frontend build failed, but API is available.</p></body></html>' > temp-frontend/index.html;
          aws s3 sync temp-frontend/ s3://$S3_BUCKET --delete;
        fi

artifacts:
  files:
    - '**/*'